// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}
model MateriaPrima {
  id        Int      @id @default(autoincrement())
  nombre    String
  unidad    String   // Ej: kilo, unidad, litro
  costoUnit Float
  productos IngredienteProducto[]
}

model Producto {
  id        Int                   @id @default(autoincrement())
  nombre    String
  tipo      String                // Ej: Raviolones, Sorrentino, etc.
  ingredientes IngredienteProducto[]
  costoTotal   Float
  costoPorPorcion Float
  precioVenta   Float
}

model IngredienteProducto {
  id           Int          @id @default(autoincrement())
  cantidad     Float        // Cantidad de ingrediente en la receta
  materiaPrima MateriaPrima @relation(fields: [materiaPrimaId], references: [id])
  materiaPrimaId Int
  producto     Producto     @relation(fields: [productoId], references: [id])
  productoId   Int
}

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql" // o "mysql", seg√∫n tu base de datos
//   url      = env("DATABASE_URL")
// }

// model User {
//   id        Int      @id @default(autoincrement())
//   name      String
//   email     String   @unique
//   password  String
//   createdAt DateTime @default(now())
// }

// model Product {
//   id          Int      @id @default(autoincrement())
//   name        String
//   description String?
//   price       Float
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }
