// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}
// Modelo para Ingredientes
// Modelo para Ingredientes
model Ingredient {
  id             Int               @id @default(autoincrement())
  name           String
  unit           String            // Unidad de medida (por ejemplo, kilo, unidad, litro)
  price          Float             // Precio por unidad
  products       ProductIngredient[] @relation("IngredientToProductIngredient")  // Relación opuesta
}

// Modelo para Productos (como raviolones, sorrentinos, etc.)
model Product {
  id               Int               @id @default(autoincrement())
  name             String
  portionSize      Float             // Tamaño de la porción
  portionsPerBatch Int               // Cantidad de porciones
  margin           Float             // Margen de ganancia como porcentaje
  tax              Float             // Impuesto en porcentaje
  ingredients      ProductIngredient[] @relation("ProductToProductIngredient")  // Relación opuesta
}

// Relación entre productos e ingredientes
model ProductIngredient {
  id           Int        @id @default(autoincrement())
  productId    Int
  ingredientId Int
  quantity     Float      // Cantidad de ingrediente por batch del producto

  product      Product     @relation("ProductToProductIngredient", fields: [productId], references: [id])
  ingredient   Ingredient  @relation("IngredientToProductIngredient", fields: [ingredientId], references: [id])
}

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql" // o "mysql", según tu base de datos
//   url      = env("DATABASE_URL")
// }

// model User {
//   id        Int      @id @default(autoincrement())
//   name      String
//   email     String   @unique
//   password  String
//   createdAt DateTime @default(now())
// }

// model Product {
//   id          Int      @id @default(autoincrement())
//   name        String
//   description String?
//   price       Float
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }
