// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Ingredient {
  id       Int      @id @default(autoincrement())
  name     String
  unit     String
  price    Float
  quantity Float
  products ProductIngredient[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  ingredients ProductIngredient[]
}

model ProductIngredient {
  id           Int       @id @default(autoincrement())
  product      Product   @relation(fields: [productId], references: [id])
  productId    Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId Int
  quantity     Float
}
// model Ingredient {
//   id        Int      @id @default(autoincrement())
//   name      String
//   unitPrice Float
//   unitType  String
//   stock     Int      @default(0)  // Cantidad de stock disponible
//   products  ProductIngredient[]
// }

// model Product {
//   id          Int      @id @default(autoincrement())
//   name        String
//   ingredients ProductIngredient[]
// }

// model ProductIngredient {
//   productId    Int
//   ingredientId Int
//   quantity     Float  // Cantidad de ingrediente necesaria para una porción

//   product    Product   @relation(fields: [productId], references: [id])
//   ingredient Ingredient @relation(fields: [ingredientId], references: [id])

//   @@id([productId, ingredientId])  // Cambiado a @@id para definir una clave primaria compuesta
// }

// model Product {
//   id          String   @id @default(cuid())
//   name        String
//   description String?
//   price       Float
//   stock       Int      @default(0) // Nuevo campo para cantidad de stock
//   featured    Boolean  @default(false) // Nuevo campo para destacar el producto
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }


// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql" // o "mysql", según tu base de datos
//   url      = env("DATABASE_URL")
// }

// model User {
//   id        Int      @id @default(autoincrement())
//   name      String
//   email     String   @unique
//   password  String
//   createdAt DateTime @default(now())
// }

// model Product {
//   id          Int      @id @default(autoincrement())
//   name        String
//   description String?
//   price       Float
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }
